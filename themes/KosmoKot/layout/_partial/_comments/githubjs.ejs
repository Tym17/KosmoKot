<script type="text/javascript">
    var req = new XMLHttpRequest();
    var commentSection = document.getElementById('github-comments');
    var toText = t => document.createTextNode(t);
    var mods = [];
    var admins = [];
    <% if (page.gh_mods) { %>
    var modString = '<%= page.gh_mods %>';
    mods = modString.split(',');
    <% } %>
    <% if (theme.plugins.github_admins) { %>
    var adminString = '<%= theme.plugins.github_admins %>';
    admins = adminString.split(',');
    <% } %>
    

    var apiUrl = 'https://api.github.com';
    req.open('GET', apiUrl + '/repos/<%= theme.plugins.github_comments %>/issues/<%= page.gh_issue %>/comments', true);

    /**
     * Specify API version
     * https://developer.github.com/v3/#current-version
     */
    req.setRequestHeader('Accept', 'application/vnd.github.v3+json');

    req.onreadystatechange = function() {
        if (req.readyState !== XMLHttpRequest.DONE) {
            return;
        }
        if (req.status !== 200) {
            commentSection.innerHTML = '<span style="color: red">Could not load comments</span>';
            return;
        }
        var commentLink = '<a id="ghcom" target="_blank" href="https://github.com/<%= theme.plugins.github_comments %>/issues/<%= page.gh_issue %>">Write a comment</a>';
        commentSection.innerHTML = commentLink;
        var response = JSON.parse(req.responseText);
        response.forEach(x => {
            var comment = document.createElement('div');
            comment.className = 'comment';
            if (admins.indexOf(x.user.login) !== -1) // Is admin
            {
                comment.className += ' admin-border';
            }
            else if (mods.indexOf(x.user.login) !== -1) // Is mod
            {
                comment.className += ' mod-border';
            }

            // Comment Head
            var commentHead = document.createElement('div');
            commentHead.className = 'comment-head';
            
            var authorName = document.createElement('a');
            authorName.className = 'author-name';
            authorName.setAttribute('href', x.user.html_url);
            authorName.setAttribute('target', '_blank');
            authorName.appendChild(toText(x.user.login));
            commentHead.appendChild(authorName);

            var commentDate = document.createElement('div');
            commentDate.className = 'comment-date';
            commentDate.appendChild(toText(x.updated_at));
            commentHead.appendChild(commentDate);

            var picture = document.createElement('img');
            picture.setAttribute('src', x.user.avatar_url);
            
            // Comment Body
            var commentBody = document.createElement('div');
            commentBody.className = 'comment-body';

            var commentContent = document.createElement('div');
            commentContent.className = 'comment-content';
            commentContent.appendChild(toText(x.body));
            
            commentBody.appendChild(picture);
            commentBody.appendChild(commentContent);

            comment.appendChild(commentHead);
            comment.appendChild(commentBody);

            commentSection.appendChild(comment);
        });

        if (response.length > 1) {
            commentSection.insertAdjacentHTML('beforeend', commentLink);
        }

    };

    req.send();
</script>